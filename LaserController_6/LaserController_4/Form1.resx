<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>